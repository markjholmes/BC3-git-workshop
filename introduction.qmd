---
title: "Introduction to GitHub for collaborative projects"
author: Luis Javier Chueca, Mark Holmes
date: today
format: 
  revealjs:
    logo: WS-slides/media/image3.png
    theme: presentation-theme-bc3.scss
    slide-number: true
number-sections: true
code-line-numbers: false
code-copy: true
toc: true
toc-depth: 1
code-overflow: wrap
---

https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control

# What is Git?

:::: {.columns}


::: {.column width="70%"}
> **Linus Torvalds: (creator)**
> 
> *"git" can mean anything, depending on your mood.*
> 
> - *random three-letter combination that is pronounceable, and not actually used by any common UNIX command*
> - *stupid. contemptible and despicable. simple.*
> - *"global information tracker"*
> - *"goddamn idiotic truckload of sh\*t"*

:::

::: {.column width="30%"}
![](https://logowik.com/content/uploads/images/git6963.jpg){fig-align="center"}
:::

::::

:::{.footer}
Image source: logowik.com
:::

# Why use Git?

![](WS-slides/media/image46.png){fig-align="center"}

:::{.footer}
Image source: Luis Javier Chueca
:::

# The key ideas of Git

# Hosting on GitHub

## Creating an account on GitHub

1. Navigate to [github.com](https://github.com/)
2. Click Sign up
3. Follow the prompts to create your personal account

## Create a repository



# Installing Git

## Windows

![](https://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/Windows_logo_-_2012.svg/1024px-Windows_logo_-_2012.svg.png){fig-align="center"}

:::{.footer}
Image source: wikimedia.org
:::

### Install

1. Download the latest version for [Windows installer](https://gitforwindows.org/)
2. Follow the instructions as provided in the Git Setup wizard screen

![](https://peateasea.de/assets/images/git_setup_wizard_window.png){fig-align="center"}

:::{.footer}
peateasea.de
:::

### Verify it worked

3. Open Windows command prompt (or Git Bash if you selected not to use the standard Git Windows Command Prompt during the Git installation).
  
4. Type:

```shell
git version
```

which should return something like:

```shell
git version 2.34.1
```

### Configure

5. Configure Git username and email using the following commands, replacing Mark's name with your own:

```shell
git config --global user.name "Mark Zuckerberg"
git config --global user.email "mark.zuckerberg@facebook.com"
```

::: {.notes}
These details will be associated with any commits that you create
:::

## Install Git on Mac OS

![](https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Apple_logo_black.svg/814px-Apple_logo_black.svg.png){fig-align="center"}

:::{.footer}
Image source: wikimedia.org
:::

### Install

1. Open your terminal and install Git using Homebrew:

```shell
brew install git
```

### Verify it worked

2. Verify the installation was successful by typing:

```shell
git --version
```

### Configure

3. Configure your Git username and email using the following commands, replacing Mark's name with your own. These details will be associated with any commits that you create:

```shell
git config --global user.name "Mark Zuckerberg"
git config --global user.email "mark.zuckerberg@facebook.com"
```

4. Check if you already have MacPorts installed:

```shell
which port
```

Which should return: `/opt/local/bin/port`

5. If not, install it:

```shell
sudo port install git
```

## Install Git on Linux/WSL: Debian / Ubuntu

![](https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Tux.svg/1727px-Tux.svg.png){fig-align="center"}


:::{.footer}
Image source: wikimedia.org
:::

### Install

1. From your terminal, install Git using `apt-get`:
  
```shell
sudo apt-get update
sudo apt-get install git
```

### Verify it worked

2. Verify the installation was successful by typing:

```shell
git --version
```

### Configure

3. Configure your Git username and email using the following commands, replacing Mark's name with your own. These details will be associated with any commits that you create:

```shell
git config --global user.name "Mark Zuckerberg"
git config --global user.email "mark.zuckerberg@facebook.com"
```

# Basic commands for git usage:

[Git Cheat Sheet](https://education.github.com/git-cheat-sheet-education.pdf)

- `git clone`
- `git add`
- `git rm`
  - `git rm --cached`
- `git commit`
- `git push`
- `git pull`
- `git request-pull`
- `git branch`
- `git merge` 
- `git clean`

# `request-pull` vs `merge`

"Hey guys! Please look at this, see whether it looks good, and confirm the request if it is"

"Hey guys! Here is my code, whether you like it or not"

# Exercises

open 

navigate to a folder

```{bash}
cd path/to/dir
```

clone the repo

```{bash}
git clone github.com/markjholmes/test-repo.git
```

## Exercise 1

- Rodrigo and Lucille want to collaborate on a repository
- The repository is hosted at github.com/RECODYN/repo
- Inside this are two files
  - data.r
  - analysis.r 
- Lucille wants to fix some errors in how the data is being downloaded and computed
- Rodrigo wants to change the statistical test

**What do they do?**

:::{.callout-tip title="Lucille"}
```shell
git clone github.com/RECODYN/repo.git
cd repo
git checkout -b lucille-data-fix
```

lucille makes her changes to data.r. nothing structural changes

```shell
git add data.r 
git commit -m "updated data download link"
git push

```

:::

:::{.callout-tip title="Rodrigo"}
:::

## Exercise 2

# Creating a new repository

[Creating a repo](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository)

1. Short and concise name
2. Avoid special characters and white spaces
3. Select between `public` or `private`
4. Add `.gitignore`and select `R`
5. Edit `README`

# Cloning a repository

On GitHub repository go to `Code` -> `Copy to clipboard`

Link the repository to `RStudio` / `Visual Studio Code` / Others

On RStudio:
  - `File`: `New Project`: `Version Control`: `Git`
  - Paste `URL` and insert `Project directory name`
  - `Create Project`

# Git with R

![](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/991px-R_logo.svg.png){fig-align="center"}

:::{.footer}
Image source: wikimedia.org
:::